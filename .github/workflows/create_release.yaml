name: create-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version number'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64
        
    - name: Install Xmake
      run: |
        curl -fsSL https://xmake.io/shget.text | bash
        echo "$HOME/.xmake/bin" >> $GITHUB_PATH

    - name: Build with Xmake
      run: |
        xmake f -m release
        xmake build -v

    - uses: robinraju/release-downloader@v1.11
      with:
        repository: "ThirteenAG/Ultimate-ASI-Loader"
        latest: true
        fileName: "Ultimate-ASI-Loader_x64.zip"

    - name: Prepare Ultimate ASI Loader
      run: |
        unzip Ultimate-ASI-Loader_x64.zip -d ./
        wget -O ./UltimateASILoader_LICENSE.md https://raw.githubusercontent.com/ThirteenAG/Ultimate-ASI-Loader/master/license
        
    - name: Create Directory Structure
      run: |
        mkdir -p ./zip/runtime/media

    - name: Prepare Release Files
      run: |
        cp ./build/linux/x86_x64/${{ github.event.repository.name }}.asi ./zip/runtime/media
        cp ${{ github.event.repository.name }}.ini ./zip/runtime/media
        cp dinput8.dll ./zip/runtime/media/dinput8.dll        
        cp UltimateASILoader_LICENSE.md ./zip/runtime/media
        touch ./zip/EXTRACT_TO_GAME_FOLDER
    
    - name: Create Release Zip
      run: |
        cd ./zip; zip -r ../${{ github.event.repository.name }}_${{ github.event.inputs.version }}.zip ./*

    - name: Update release_body.md
      run: |
        releaseBody="release_body.md"
        zipName="${{ github.event.repository.name }}_${{ github.event.inputs.version }}.zip"
        sed -i "s/<RELEASE_ZIP_NAME>/$zipName/" "$releaseBody"
        
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "${{ github.event.repository.name }}_${{ github.event.inputs.version }}.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.inputs.version }}
        name: "${{ github.event.inputs.version }}"
        draft: true
        bodyFile: "release_body.md"
        generateReleaseNotes: false
        artifactErrorsFailBuild: true
